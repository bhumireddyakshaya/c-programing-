#include <stdio.h>

#define V 4

int graph[V][V] = {
    {0, 10, 15, 20},
    {10, 0, 35, 25},
    {15, 35, 0, 30},
    {20, 25, 30, 0}
};

int visited[V];
int min_cost = 999;

void tsp(int current_city, int count, int cost) {
    int i;
    visited[current_city] = 1;

    if (count == V && graph[current_city][0]) {
        min_cost = (cost + graph[current_city][0] < min_cost) ? cost + graph[current_city][0] : min_cost;
    }

    for (i = 0; i < V; i++) {
        if (!visited[i] && graph[current_city][i]) {
            tsp(i, count + 1, cost + graph[current_city][i]);
        }
    }

    visited[current_city] = 0;
}

int main() {
    for (int i = 0; i < V; i++) {
        visited[i] = 0;
    }

    tsp(0, 1, 0);

    printf("Minimum cost for the Traveling Salesman Problem: %d\n", min_cost);

    return 0;
}
